<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>